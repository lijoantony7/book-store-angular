SSH Keycode gen in CMD.

Visual Studio 2022 integrates Git/GitHub with multiple profiles for easy account switching. Visual Studio Code relies on system Git and lacks built-in profile support, requiring separate SSH keys or manual credential entry for different GitHub accounts.

How to add and MANAGE multiple GIT accounts  and manage GIT functions in VS Code.
 
1: IN CDM:

	C:\Users\lijoa>ssh-keygen

	Enter file in which to save the key (C:\Users\lijoa/.ssh/id_rsa):

	Enter passphrase (empty for no passphrase):

	Enter same passphrase again:

	SHA256:h7CgkhOsB3wto0g7UeMM5V9I1FKi2XvT5Bo issac@Issac (Something like this will come)

2: IN CDM, go inside the folder

	C:\Users\lijoa>cd .ssh

	C:\Users\lijo\.ssh>clip < id_rsa.pub (Then copy the public KEY)

3: CONNECTING or AUTHENTICATE TO GIT

	C:\Users\issac\.ssh>ssh -T git@github.com (Authenticating to the GITHUB server now)

	[cdm asks this]
	Are you sure you want to continue connecting (yes/no/[fingerprint])? yes 

	Enter passphrase for key 'C:\Users\lijoa/.ssh/id_rsa':
	
	[If all OK, This message shows]
	Hi Issac1809! You've successfully authenticated, but GitHub does not provide shell access.
 
4: If Pushing branch as NEW
	IN VS CODE Terminal: Inside project folder

	PS D:\YokogawaAsiaPrivateLimited\YEA> git config user.email

	PS D:\YokogawaAsiaPrivateLimited\YEA> git init

	PS D:\YokogawaAsiaPrivateLimited\YEA> git add .

	PS D:\YokogawaAsiaPrivateLimited\YEA> git commit -m "First Commit"

	PS D:\YokogawaAsiaPrivateLimited\YEA> git config --get remote.origin.url

	PS D:\YokogawaAsiaPrivateLimited\YEA> git remote set-url origin git@github.com:Issac1809/PlayWright.git

	PS D:\YokogawaAsiaPrivateLimited\YEA> git config --get remote.origin.url                               

	PS D:\YokogawaAsiaPrivateLimited\YEA> git remote -v

	PS D:\YokogawaAsiaPrivateLimited\YEA> git push origin master

✅ Since SSH is properly set,
Git will use the SSH Key automatically!

 
To verify that the remote URL has been changed correctly: git remote -v
 
To verify the user name and email configuration: git config user.name. git config user.email.
 
 
=============================================================================================

Now, when you push or pull from a repository, Git will use the SSH key associated with the account specified in the remote URL.

When you run ssh-keygen without any options, it generates an RSA key pair with a default key size of 2048 bits. RSA is a widely used algorithm for public-key cryptography.

The command ssh-keygen -t ed25519 -C "your-email@example.com" includes a few options:

-t ed25519: This specifies the type of key to create. In this case, it’s creating an Ed25519 key. Ed25519 is a modern elliptic curve algorithm that offers better security with faster performance compared to RSA.
-C "your-email@example.com": This adds a comment to the key. By convention, this is usually the email address associated with the key. The comment makes it easier to identify the key later on. It doesn’t affect the functionality of the key.

WE CAN DELETE THE SSH KEYS (BUT GOTTA DELETE FROM GITHUB ALSO)
CAN CREATE NEW AND ADD TO THE GITHUB AGAIN.