SSH Keycode gen in CMD.

Visual Studio 2022 integrates Git/GitHub with multiple profiles for easy account switching. Visual Studio Code relies on system Git and lacks built-in profile support, requiring separate SSH keys or manual credential entry for different GitHub accounts.

1) ssh-keygen		: for generating the ssh key in the system.
2) Enter file in which to save the key (C:\Users\lijoa/.ssh/id_rsa):		: enter the path or ENTER for default path.
	msg displaed: Created directory 'C:\\Users\\lijoa/.ssh'.
3) Enter passphrase (empty for no passphrase):		: second level password (it won't show when typing)
	Enter same passphrase again:
4) (generate and it will show) Your identification has been saved in C:\Users\lijoa/.ssh/id_rsa
Your public key has been saved in C:\Users\lijoa/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:c8FYogXADeDmUIZszx95o0wEyBjw7g0O4IJps+StDnM lijoa@Cormsquare-018
The key's randomart image is:
5) go to the path using cd command (cd .ssh)
6) Copy the key into the clipboard using the command (clip < id_rsa.pub)
	now the code is copied in the clipboard.
7) Add the copied key to your GitHub account. Go to GitHub, open Settings, select SSH and GPG keys, and then click on New SSH key.
	(8 to 11 for testing the code is configured)
8) Test the SSH key. You can do this by running ssh -T git@github.com
9) The authenticity of host 'github.com (20.207.73.82)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])?  (GAVE YES)
10) will ask for the passphrase,
	Enter passphrase for key 'C:\Users\lijoa/.ssh/id_rsa':lj(is mine)
11)(Will get this kind of msg) Hi lijoantony7! You've successfully authenticated, but GitHub does not provide shell access.



Here’s how you can set up multiple SSH keys for different GitHub accounts:

1) Generate a new SSH key for your second account:
	ssh-keygen -t ed25519 -C "your-email@example.com"
	When asked to “Enter a file in which to save the key,” enter a different path from your first key. 	For example: ~/.ssh/id_rsa_secondaccount.

2) Add the new SSH key to the ssh-agent:
	ssh-add ~/.ssh/id_rsa_secondaccount

3) Copy the new SSH key to your clipboard:
	clip < ~/.ssh/id_rsa_secondaccount.pub

4) Add the new SSH key to your second GitHub account. Go to GitHub, open Settings, select SSH and GPG keys, and then click on New SSH key to add the copied key to your second GitHub account.

5) Create a config file in your .ssh directory:
	touch ~/.ssh/config

6) Edit the config file to use the correct SSH key for each GitHub account. Open the config file in a text editor and add an entry for each account like this:
# Account 1
Host github.com-account1
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_account1

# Account 2
Host github.com-account2
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_account2

7) Change the remote URL of your repositories to use the correct host. For each repository, you can change the remote URL with the command:
	git remote set-url origin git@github.com-account1:USERNAME/REPOSITORY.git

Now, when you push or pull from a repository, Git will use the SSH key associated with the account specified in the remote URL.


When you run ssh-keygen without any options, it generates an RSA key pair with a default key size of 2048 bits. RSA is a widely used algorithm for public-key cryptography.

The command ssh-keygen -t ed25519 -C "your-email@example.com" includes a few options:

-t ed25519: This specifies the type of key to create. In this case, it’s creating an Ed25519 key. Ed25519 is a modern elliptic curve algorithm that offers better security with faster performance compared to RSA.
-C "your-email@example.com": This adds a comment to the key. By convention, this is usually the email address associated with the key. The comment makes it easier to identify the key later on. It doesn’t affect the functionality of the key.

WE CAN DELETE THE SSH KEYS (BUT GOTTA DELETE FROM GITHUB ALSO)
CAN CREATE NEW AND ADD TO THE GITHUB AGAIN.